`my program`

# Custom Struct
struct MyCustomStruct {
    let int val;
    let int val2;
}

# Declare a Function
func null do_a_thing: MyCustomStruct _struct {
    # Get user name
    cll 'What is your name? ';
    let str name = "Owen";
    cll "Hello, %!" % name;

    # Create loop
    loop i: i < _struct.val {
        cll "Number: " + i.@str.();

        if i < 50 {
            continue;
        } else {
            break;
        }
    }

    loop x: x < _struct.val2 {
        let str type = null;
        if x % 2 == 0 {
            updt type = "even";
        } else {
            updt type = "odd";
        }

        cll x.@str.() + " is an " + type + " number.";
    }

    updt name = "My New Value";
}

# main function
func null amain: str[] args {
    # Create MyCustomStruct Instance
    let MyCustomStruct my_instance = $() MyCustomStruct;
    updt my_instance.val = 1__00;
    updt my_instance.val2 = 200;

    # Call a Function
    cll do_a_thing.(my_instance);
}

func int fib: int n {
    if n <= 1 {
        return n;
    } else {
        return fib.(n - 1) + fib.(n - 2);
    }
}

func int @main: str[] args {
    println fib.(20).@str.();
    println amain.(args).@str.();
    let int[] a = $() int[];
    cll a.@append.("goat", "PIG", 34);
    cll a.@append.("23", "PIG", 34);
    println a.@len.().@str.();
    println a.[3].@str.();
    println args.[1];
}
